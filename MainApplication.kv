#:kivy 1.11.1

#:import Factory kivy.factory.Factory




#Create a Custom Button Widget for an Execute Button

<Execute@Button>:
    text: 'Execute'
    size_hint: 0.5, 0.1




#Create a Custom TextInput Widget for IPv4 Address Text Input

<IPv4AddressInput@TextInput>:    
    hint_text:'IPv4 Address'
    multiline: False
    size_hint_y: None
    height: '32dp'




#Create a Custom GridLayout for combining IPv4AddressInput Widget and a Label

<IPv4TargetDeviceLayout@GridLayout>:
    orientation: 'vertical'
    rows: 1
    spacing: 2
    Label: 
        text: 'Enter IPv4 Address of  Target Device'
        size_hint_y: None
        height: IPv4AddressTextInput.height
    IPv4AddressInput:
        id: IPv4AddressTextInput




#Create a custome Spinner Widget to allow for the subnet to be selected

<SubnetMaskSpinnerLayout@RelativeLayout>: 
    Spinner:
        id: SubnetMaskSpinner
        size_hint: 1, None
        height: '32dp'
        sync_height: True
        text: 'Subnet Mask'
        values: '255.255.255.0', '255.255.255.128', '255.255.255.192', '255.255.255.224', '255.255.255.240', '255.255.255.248', '255.255.255.252'



#Create a Custom GridLayout for combining IPv4AddressInput, SubnetMaskSpinner Widgets and a Label

<IPv4AndSubnetMaskLayout@GridLayout>:
    orientation: 'vertical'
    cols: 3
    #padding: 5
    spacing: 2
    Label: 
        text: 'Enter IPv4 Address and \n Subnet Mask To Be Assigned'
        halign: 'center'
    IPv4AddressInput:
        id: IPv4AddressTextInput
    SubnetMaskSpinnerLayout:
        id: SubnetMaskSpinnerLayout



#Create a custome Spinner Widget to allow for the interface type to be selected

<InterfaceTypeSpinnerLayout@RelativeLayout>: 
    Spinner:
        id: InterfaceTypeSpinner
        size_hint: 1, None
        height: '32dp'
        sync_height: True
        text: 'Interface Type'
        values: 'FastEthernet', 'GigabitEthernet'




#Create a Custom GridLayout for combining InterfaceTypeSpinner Widget, a Textinput for the interface number and a Label

<InterfaceSelectionLayout@GridLayout>:
    orientation: 'vertical'
    cols: 3
    spacing: 2
    Label: 
        text: 'Enter Interface Type and Number'
        text_size: self.width, None
        height: self.texture_size[1]
    InterfaceTypeSpinnerLayout:
        id: InterfaceTypeSpinnerLayout
    TextInput:
        id: InterfaceNumberTextInput
        hint_text:'Interface Number'
        multiline: False
        size_hint_y: None
        height: '32dp'  




 #Create a Custom PopUp Widget for Username and Password Entry

<DeviceUsernameAndPasswordPopup>:
    auto_dismiss: False
    size_hint: 0.5, 0.5
    title: ""
    RelativeLayout:
        RelativeLayout:
            GridLayout:
                orientation: 'vertical' 
                cols: 1
                padding: 5
                spacing: 2
                Label: 
                    text: 'Enter Username for Device'
                    size_hint_y: None
                    height: UsernameTextInput.height
                TextInput:
                    id: UsernameTextInput
                    hint_text:'Device Username'
                    multiline: False
                    size_hint_y: None
                    height: '32dp'
                Label: 
                    text: 'Enter Password for Device'
                    size_hint_y: None
                    height: PasswordTextInput.height
                TextInput:
                    id: PasswordTextInput
                    hint_text:'Device Password'
                    multiline: False
                    password: True
                    size_hint_y: None
                    height: '32dp'
        AnchorLayout:
            anchor_x: 'center'
            anchor_y: 'bottom'
            padding: 5
            Button:
                text: 'Save Credentials'
                size_hint: 0.5, 0.2
                on_release: app.device_username = UsernameTextInput.text 
                on_release: app.device_password = PasswordTextInput.text
                on_release: root.dismiss()

 #Create a Custom PopUp Widget for when no IP address is entered 

<InvalidIPAddressPopup@Popup>:
    size_hint: 0.5, 0.3
    title: ""
    Label: 
        text: 'Please enter a valid IP address'




 #Create a Custom PopUp Widget for when Netmiko is unable to connect to a device 

<NetmikoTimeoutPopup@Popup>:
    size_hint: 0.5, 0.3
    title: ""
    Label: 
        text: 'Unable to connect to device - Connection time out'




 #Create a Custom PopUp Widget for when Netmiko is unable to authenticate to a device 

<NetmikoAuthenticateFailurePopup@Popup>:
    size_hint: 0.5, 0.3
    title: ""
    Label: 
        text: 'Unable to connect to device - Failed to authenticate'




 #Create a Custom PopUp Widget for when Netmiko is unable to due to SSH not being enabled

<NetmikoSSHFailurePopup@Popup>:
    size_hint: 0.5, 0.3
    title: ""
    Label: 
        text: 'Unable to connect to device - SSH is not enabled'


 #Create a Custom PopUp Widget for when a Username or Password is not entered

<NoUserOrPassPopup@Popup>:
    size_hint: 0.6, 0.3
    title: ""
    Label: 
        text: 'Please ensure both a username and password have been entered'



    